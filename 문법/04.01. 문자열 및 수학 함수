[문자열 내장 함수]
String s = "abc";
- str.func(x); 형태로 사용
- 원본 문자열 str은 보존. 새로운 문자열이나 결과값 반환
- 매개변수 x는 기본적으로 문자열만 가능(문자 불가능), 문자도 가능한 경우 존재

1. 인덱싱: 검색 및 부분문자열
str.charAt(0); // str[0]은 에러
str.substring(s) // 파이썬의 str[s:]와 동일
str.substring(s, e) // 파이썬의 str[s:e]와 동일. e 위치는 미포함

* 역인덱싱
str.indexOf("ab"); // 첫 문자열의 첫 문자 인덱스
str.lastIndexOf("ab"); // 마지막 문자열의 첫 문자 인덱스
str.indexOf('a'); // 문자도 가능
str.lastIndexOf('a'); // 문자도 가능

2. 문자열 정보
str.equals(str1); // str == str1과 동일
str.equalsIgnoreCase(str1); // 대소문자 무시
str.contains("a"); // contains('a')는 에러(문자열만 가능)

3. 조작
str.trim(); // 양끝의 공백 제거, 연속공백 모두 제거
str.toUpperCase();
str.toLowerCase();

str.concat("def"); // concat('d')는 에러(문자열만 가능), str + "def"와 동일(str + 'd'도 가능)
str.split("ab"); // split('a')는 에러, 배열 반환
(예시)
String str = "abcab";
ArrayList<String> list = new ArrayList<>(Arrays.asList(str.split("ab")));
System.out.println(list);
>>> [, c] (맨 앞은 공백문자로 , 맨 뒤는 그냥 사라짐)

str.replace(old, new) // 문자도 가능
str.replaceAll(regex, new) // 정규표현식 사용. 따라서 문자열은 가능한데, 문자는 불가능

[수학 함수]
Math.abs(x);
Math.sqrt(x);
Math.pow(a, b); // 파이썬의 a**b와 동일
Math.max(a, b);
Math.min(a, b);
Math.ceil(x); // 올림
Math.floor(x); // 버림
Math.sin(rad);
Math.cos(rad);
Math.toDegrees(rad);
Math.toRadians(deg);
Math.random(); // 0 <= x < 1

* 상수: Math.PI, Math.E
